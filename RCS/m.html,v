head	1.14;
access;
symbols;
locks
	netrc:1.14; strict;
comment	@# @;


1.14
date	2014.09.28.16.45.20;	author netrc;	state Exp;
branches;
next	1.13;

1.13
date	2014.09.28.12.35.38;	author netrc;	state Exp;
branches;
next	1.12;

1.12
date	2014.09.24.13.01.57;	author netrc;	state Exp;
branches;
next	1.11;

1.11
date	2014.09.23.23.31.45;	author netrc;	state Exp;
branches;
next	1.10;

1.10
date	2014.09.23.20.31.18;	author netrc;	state Exp;
branches;
next	1.9;

1.9
date	2014.09.23.17.10.23;	author netrc;	state Exp;
branches;
next	1.8;

1.8
date	2014.09.23.17.00.59;	author netrc;	state Exp;
branches;
next	1.7;

1.7
date	2014.09.23.15.20.25;	author netrc;	state Exp;
branches;
next	1.6;

1.6
date	2014.09.23.15.01.22;	author netrc;	state Exp;
branches;
next	1.5;

1.5
date	2014.09.23.00.59.40;	author netrc;	state Exp;
branches;
next	1.4;

1.4
date	2014.09.22.23.31.27;	author netrc;	state Exp;
branches;
next	1.3;

1.3
date	2014.09.22.23.04.43;	author netrc;	state Exp;
branches;
next	1.2;

1.2
date	2014.09.22.20.57.43;	author netrc;	state Exp;
branches;
next	1.1;

1.1
date	2014.09.22.20.44.11;	author netrc;	state Exp;
branches;
next	;


desc
@@


1.14
log
@*** empty log message ***
@
text
@<html ng-app="GGApp">
<head>
  <meta charset="utf-8">
  <title>Get Going!</title>
  <link rel="icon" href="favicon.ico">

  <script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.10/angular.min.js"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.20/angular-cookies.min.js"></script>
  <script src="//code.jquery.com/jquery-2.1.1.min.js"></script>

  <style>
  body {
    background-color: #DDDDDD;
    font-family: sans-serif;
  }
  .topper {
    background-color: #444444;
    color: #BBBBBB;
    font-size: 175%;
    float: none;
  }
  .ggTimeStr {
    font-size: 250%;
  }
  .ggSecsStr {
    font-size: 50%;
  }
   .ggTT {
   font-size: 200%;
  }
</style>
</head>

<script>
  var gg = {};
  gg.mStr = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
  gg.wStr = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];

  var GGApp = angular.module('GGApp', ["ngCookies"]);

  GGApp.controller('GGLoginCtrl', function ($scope, $cookies){
    var x = $cookies.getGoingUserName;  // so we can read this in the debugger
    console.log("ggun cookie:"+x+".");
    if ( !$cookies.getGoingUserName) {
      $scope.loginstate = "login";          // first time, no cookie, wait
    } else {
      $scope.username = $cookies.getGoingUserName;
      $scope.loginstate = "logout";
      $scope.$emit('doLogin',$scope.username);  // first time, use cookie
    }

    $scope.dologinstate = function() {
      if ($scope.loginstate == "login") {
        console.log("login " + $scope.username);
        if (!$scope.username) { // empty?
          return;
        }
        $cookies.getGoingUserName = $scope.username;
        $scope.loginstate = "logout";
        $scope.$emit('doLogin',$scope.username);
      } else { // logout
        console.log("logout!" + $scope.username);
        $scope.username = '';
        delete $cookies.getGoingUserName;
        $scope.loginstate = "login";
        $scope.$emit('doLogout');
      }
    };
    // Facebook login fiddle http://jsfiddle.net/z6u2z75z/
  });

  GGApp.controller('GGMainCtrl', function ($scope, $http){

    // fist time initialization; show (at least) the day and time!
    t = new Date();
    $scope.dateStr = gg.wStr[t.getDay()] + " " + t.getDate() + " " + gg.mStr[t.getMonth()] + " " + t.getFullYear();

    $scope.emptyData = function() {
      ///////
      // the user's data, an array of objects, with timeStr and taskStr
      $scope.userName = ""; // wait for login
      $scope.ggNoEdit = true; // wait for login action
      $scope.ggTaskTimes = [ ];
      // this is an array, because Date returns day of week as 0-6
      $scope.ggWeekDays = [ { w:"Sunday", s:"" }, { w:"Monday", s:"" }, { w:"Tuesday", s:"" }, { w:"Wednesday", s:"" }, { w:"Thursday", s:"" }, { w:"Friday", s:"" }, { w:"Saturday",s:"" } ];
      // this is an object, propert keys are date, e.g. 25 June, vals are string
      $scope.ggSpecialDays = { };
      $scope.ggWeatherCity= "";

      $scope.specialDayStr = "";
      $scope.weekDayStr = "";
      //////
    };

    $scope.emptyData(); // then wait for login

    $scope.getUserData = function() {
      // use 'return' so controller knows when promise is resolved; runs apply
      return $http.get($scope.ggStoragePath).success(function(data) {
        if (data.ggTaskTimes) {
          $scope.ggTaskTimes = data.ggTaskTimes;
        }
        if (data.ggSpecialDays) {
          $scope.ggSpecialDays = data.ggSpecialDays;
        }
        if (data.ggWeekDays) {
          $scope.ggWeekDays = data.ggWeekDays;
        }
        if (data.ggWeatherCity) {
          $scope.ggWeatherCity = data.ggWeatherCity;
        }
        $scope.weekDayStr = $scope.ggWeekDays[t.getDay()].s;
        thisday = t.getDate() + " " + gg.mStr[t.getMonth()];
        if ($scope.ggSpecialDays[ thisday ]) {
          $scope.specialDayStr = $scope.ggSpecialDays[ thisday ];
        }
        $scope.cleanData = false;   // redo the data calcs
      }).error(function(data) {
        // need to check if network/server error or if not found--> set defaults
        console.log("httpget error status: " + data.status + ": " + data.statusText);
        if (data.status == 404) {
          // first time; assume data has been reset (see above) or from logout
          return;
        }
        alert("Error getting " + $scope.userName + " data. (" + $scope.ggStoragePath + "). error status: " + data.status + ": " + data.statusText);
      }) ;
    };

    $scope.checkData = function () {
      if ($scope.cleanData) { 
        return 
      }; // apparently, clean

      $scope.ggTaskTimes.forEach(function(t) {
        var i = t.t.indexOf(":");
        var th = t.t.substr(0,i);
        var tm = t.t.substr(i+1);
        t.ts = th * 60 + 1*tm;
        //console.log("cd: " + t.t + " th:" + th + " tm:" + tm + "  secs:" + ts);
      } );
      // now go through and (re)-set the array of todos
      $scope.todoArray = [];
      var i = 0;
      $scope.ggTaskTimes.forEach(function(t) {
        $scope.todoArray.push( {ts:(t.ts-120), d:'startCountdown', i:i} );
        $scope.todoArray.push( {ts:t.ts, d:'goRed', i:i} );
        i++;
      } );
      // sort todoArray
      // run through logic for all secs up to now
      $scope.cleanData = true;
    };

    $scope.timeCheck = function () {
      $scope.checkData();

      var tnow=new Date();
      var h=tnow.getHours();
      var m=tnow.getMinutes();
      if (m<10) {m = "0" + m};  // add zero in front of numbers < 10
      var s=tnow.getSeconds();
      if (s<10) {s = "0" + s};  // add zero in front of numbers < 10
      $scope.timeStr = h + ":" +m;
      $scope.secsStr = s;
      $scope.$apply();
      var t = setTimeout(function(){$scope.timeCheck()},1000);
      //$scope.$timeout(function(){$scope.timeCheck()},1000);  // auto-call 'apply'
      //return $scope.$timeout(function(){$scope.timeCheck()},1000);  // auto-call 'apply'
    };

    $scope.$on('doLogin', function(e,uname) { 
      console.log("doLogin " + uname); 
      $scope.userName = uname;  // thanks, login controller
      $scope.ggNoEdit = false; // ok to edit now
      $scope.ggnamePath = "gnetrc";
      //$scope.ggStoragePath = "http://getgoing1.s3.amazonaws.com/"+$scope.userName+"/ggTaskTimes.json";
      $scope.ggStoragePath = "http://getgoing1.s3.amazonaws.com/"+$scope.userName+".json";
      console.log($scope.ggStoragePath);
      $scope.getUserData();
    } );

    $scope.$on('doLogout', function(e,args) { 
      console.log("doLogout "); 
      $scope.emptyData();
    } );

    $scope.timeCheck();  // init - show the time

    $scope.addTimeTask = function( ) {
      console.log("addTimeTask " + $scope.addTime + " - " + $scope.addTask);
      $scope.ggTaskTimes.push( { t:$scope.addTime, s:$scope.addTask } );
      $scope.addTime = "";
      $scope.addTask = "";
      $scope.storeData();
    };
    $scope.removeTime = function( t ) {
      console.log("removetime " + t);
      $scope.ggTaskTimes = $scope.ggTaskTimes.filter( function(n){ 
        return n.t != t; });
      $scope.storeData();
    };
    $scope.updateWeekDay = function( w ) {
      console.log("updateWeekDay ");
      $scope.weekDayStr = $scope.ggWeekDays[t.getDay()].s; // in case its today
      $scope.storeData();
    }
    $scope.clearWeekDay = function( w ) {
      var n = gg.wStr.indexOf(w);
      console.log("clearWeekDay " + w + " " + n);
      $scope.ggWeekDays[n].s = "";
      $scope.weekDayStr = $scope.ggWeekDays[t.getDay()].s; // in case its today
      $scope.storeData();
    }
    $scope.addSpecialDay = function( ) {
      console.log("addSpecialDay " + $scope.sdaddDay + " - " + $scope.sdaddWhat);
      if ( ($scope.sdaddDay) && ($scope.sdaddWhat)) {
      //$scope.ggSpecialDays.push( { d:$scope.sdaddDay, w:$scope.sdaddWhat } );
        $scope.ggSpecialDays[ $scope.sdaddDay ] = $scope.sdaddWhat;
        $scope.sdaddDay = "";
        $scope.sdaddWhat = "";
        $scope.storeData();
      }
    };
    $scope.removeSpecialDay = function( d ) {
      console.log("removeSpecialDay " + d);
      delete $scope.ggSpecialDays[ d ]; 
      $scope.storeData();
    };
    $scope.changeWeatherCity = function( w ) {
      console.log("changeWC " + $scope.ggWeatherCity);
      $scope.storeData();
    }

    $scope.storeData = function( t ) {
      $.ajax({
        type: "PUT",
        url: $scope.ggStoragePath,
        dataType: 'json',
        async: false,
        data: JSON.stringify({ 
          "ggTaskTimes": $scope.ggTaskTimes, 
          "ggWeekDays": $scope.ggWeekDays, 
          "ggSpecialDays": $scope.ggSpecialDays,
          "ggWeatherCity": $scope.ggWeatherCity })
      }); 
      $scope.cleanData = false;   // redo the data calcs
      $scope.checkData(); 
    // see http://naleid.com/blog/2013/05/22/saving-json-client-side-to-an-s3-bucket
    // interesting, but not used here; http://christophervachon.com/blog/2014/08/02/aws-s3-connecting-and-getting-a-list-of-objects
    };
  });


// ODD: "track by $index" to get rid of Error [ngRepeat:dupes]
</script>

<body ng-controller="GGMainCtrl">

<table class="topper">
  <tr>
    <td width="25%" align="left"> {{ dateStr }} </td>
    <td width="50%"> &nbsp; </td>
    <td width="25%" align="right"> {{ weekDayStr }}  </td>
  </tr>
  <tr>
    <td width="25%" align="left"> <span style="display: block !important; width: 180px; text-align: center; font-family: sans-serif; font-size: 12px;"><a href="http://www.wunderground.com/cgi-bin/findweather/getForecast?query=zmw:07006.1.99999&bannertypeclick=wu_blueglass" title="Caldwell, New Jersey Weather Forecast" target="_blank"><img src="http://weathersticker.wunderground.com/weathersticker/cgi-bin/banner/ban/wxBanner?bannertype=wu_blueglass&airportcode=KCDW&ForcedCity=Caldwell&ForcedState=NJ&zip=07006&language=EN" alt="Find more about Weather in Caldwell, NJ" width="160" /></a><br><a href="http://www.wunderground.com/cgi-bin/findweather/getForecast?query=zmw:07006.1.99999&bannertypeclick=wu_blueglass" title="Get latest Weather Forecast updates" style="font-family: sans-serif; font-size: 12px" target="_blank">Click for weather forecast</a></span> </td>
    <td class="ggTimeStr" width="50%" align="center"> {{ timeStr }}<span class="ggSecsStr">:{{ secsStr }} </span> </td>
    <td width="25%"> {{ specialDayStr }} </td>
  </tr>
</table>

<br>
<br>
<br>

<table width="100%">
  <tr ng-repeat="tt in ggTaskTimes | orderBy: 'ts'">
    <td  width="42%" align="right" class="ggTT" > {{ tt.t }} </td>
    <td  width="58%" align="left" class="ggTT" > &nbsp; &nbsp; {{ tt.s }} </td>
  </tr>
</table>

<br>
<br>
<br>
<hr>
<br>

<div ng-controller="GGLoginCtrl">
  <form ng-submit="dologinstate()">
    <td> <input type="text" ng-model="username" placeholder='enter name'> </td>
    <td> <input type="submit" value="{{loginstate}}"> </td>
  </form>
</div>

<br>

<div ng-hide="ggNoEdit">

Tasks / Times:
<form ng-submit="addTimeTask()">
  <table>
    <tr ng-repeat="tt in ggTaskTimes | orderBy:'ts'">
      <td> &nbsp; &nbsp; </td>
      <td> <img src="delete.png" ng-click="removeTime(tt.t)"> </td>
      <td> {{ tt.t }} &nbsp; {{ tt.s }} </td>
    </tr>
    <tr>
      <td> &nbsp; </td>
      <td> &nbsp; &nbsp; </td>
      <td> <input type="text" ng-model="addTime" placeholder="time"> </td>
      <td> <input type="text" ng-model="addTask" placeholder="a task"> </td>
      <td> <input type="submit" value="add"> </td>
    </tr>
  </table>
</form>

<br>

Daily activities:
<form ng-submit="updateWeekDay()">
  <table>
    <tr ng-repeat="d in ggWeekDays track by $index">
      <td> {{ d.w }} </td> 
      <td> <input type="text" ng-model="d.s" placeholder="empty"> </td>
      <td> <img src="delete.png" ng-click="clearWeekDay(d.w)"> </td>
    </tr>
    <tr>
      <td> <input type="submit" value="update"> </td>
    </tr>
  </table>
</form>

<br>

Special dates:
<form ng-submit="addSpecialDay()">
  <table>
  <tr ng-repeat="(d,w) in ggSpecialDays track by $index">
    <td> <a href="" ng-click="removeSpecialDay(d)"> &#9747; </td> 
    <td> {{ d }} </td> 
    <td> {{ w }} </td> 
  </tr>
  <tr>
    <td> &nbsp; </td>
    <td> <input type="text" ng-model="sdaddDay" placeholder="day month"> </td>
    <td> <input type="text" ng-model="sdaddWhat" placeholder="what"> </td>
    <td> <input type="submit" value="add"> </td>
  </tr>
  </table>
</form>

<br>

Weather City:
<form ng-submit="changeWeatherCity()">
  <input type="text" ng-model="ggWeatherCity"> 
  <input type="submit" value="Set"> </td>
</form>

</div>

</body>
</html>
@


1.13
log
@*** empty log message ***
@
text
@d117 1
a129 1
        console.log("cd " + $scope.cleanData);
d134 1
a134 1
      $scope.ggTaskTimes.map(function(t) {
d141 10
a154 1
      $scope.cleanData = false;
d246 2
d277 1
a277 1
  <tr ng-repeat="tt in ggTaskTimes track by $index">
d303 1
a303 1
    <tr ng-repeat="tt in ggTaskTimes track by $index">
@


1.12
log
@corrected first time, login, logout timecheck/get data/ empty data logic
added icon for delete task item
added icon to clear a week day string
@
text
@d25 3
d98 2
a99 1
      $http.get($scope.ggStoragePath).success(function(data) {
d128 16
d145 3
d151 1
d153 1
a153 1
      if (m<10) {m = "0" + m};  // add zero in front of numbers < 10
d155 5
d256 1
a256 1
    <td class="ggTimeStr" width="50%" align="center"> {{ timeStr }} </td>
@


1.11
log
@*** empty log message ***
@
text
@d42 1
a42 1
      $scope.loginstate = "login";
d71 4
d92 1
a92 2
    $scope.emptyData();
    // then wait for login
d143 1
d149 1
a149 6
    t = new Date();
    $scope.dateStr = gg.wStr[t.getDay()] + " " + t.getDate() + " " + gg.mStr[t.getMonth()] + " " + t.getFullYear();
    $scope.timeStr="loading t...";

    //$scope.getUserData(); // first time through
    $scope.timeCheck();
d166 8
a173 1
      $scope.weekDayStr = $scope.ggWeekDays[t.getDay()].s;
d265 1
a265 1
      <td> <a href="" ng-click="removeTime(tt.t)"> &#9747; </td> 
d284 3
a286 1
      <td> {{ d.w }} </td> <td> <input type="text" ng-model="d.s" placeholder="empty"> </td>
@


1.10
log
@rearranged login and storage path S3 name
@
text
@d232 2
a233 2
    <td  width="45%" align="right" class="ggTT" > {{ tt.t }} </td>
    <td  width="45%" align="left" class="ggTT" > &nbsp; &nbsp; {{ tt.s }} </td>
@


1.9
log
@*** empty log message ***
@
text
@a32 2
  gg.namePath = "gnetrc";
  gg.storagePath = "http://getgoing1.s3.amazonaws.com/"+gg.namePath+"/ggTaskTimes.json";
a34 1
  console.log(gg.storagePath);
d46 1
d63 1
d70 20
a89 10
    ///////
    // the user's data, an array of objects, with timeStr and taskStr
    $scope.ggTaskTimes = [ ];
    // this is an array, because Date returns day of week as 0-6
    $scope.ggWeekDays = [ { w:"Sunday", s:"" }, { w:"Monday", s:"" }, { w:"Tuesday", s:"" }, { w:"Wednesday", s:"" }, { w:"Thursday", s:"" }, { w:"Friday", s:"" }, { w:"Saturday",s:"" } ];
    // this is an object, propert keys are date, e.g. 25 June, vals are string
    $scope.ggSpecialDays = { };
    $scope.specialDayStr = "";
    $scope.ggWeatherCity= "";
    //////
d92 1
a92 1
      $http.get(gg.storagePath).success(function(data) {
d111 7
a117 3
// need to check if network/server error or if not found--> set defaults
        $scope.ggTaskTimes = "error";
        console.log("anghttpget error: " + data.ggTaskTimes);
d130 8
a137 2
    $scope.$on('doLogin', function(e,args) { 
      console.log("doLogin event caught"); 
d140 4
d149 1
a149 1
    $scope.getUserData(); // first time through
a189 2
    // see http://naleid.com/blog/2013/05/22/saving-json-client-side-to-an-s3-bucket
    // interesting, but not used here; http://christophervachon.com/blog/2014/08/02/aws-s3-connecting-and-getting-a-list-of-objects
d193 1
a193 1
        url: gg.storagePath,
d202 2
d207 1
d252 2
d313 2
@


1.8
log
@formatting, tabs, global user var
@
text
@a43 1
    $scope.loginstate = "...";  // remove this once we confirm we catch all possible
a70 1

d72 1
a72 2
    // the user's data
    $scope.ggSpecialDays = [ ];
d74 1
a74 2
// change this to simpler assoc array
// (just like special days?)
d76 3
a79 1
    $scope.specialDayStr = "";
@


1.7
log
@moved http.get to its own function
@
text
@d6 1
d10 18
a27 17
 <style>
 body {
  background-color: #DDDDDD;
  font-family: sans-serif;
 }
 .topper {
  background-color: #444444;
  color: #BBBBBB;
  font-size: 175%;
  float: none;
 }
 .ggTimeStr {
  font-size: 250%;
 }
 .ggTT {
  font-size: 200%;
 }
d32 6
a37 8

  var user = {};
  user.namePath = "gnetrc";
  user.storagePath = "http://getgoing1.s3.amazonaws.com/"+user.namePath+"/ggTaskTimes.json";
  console.log(user.storagePath);

  var mStr = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]

a71 1
    $scope.weekDays = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
d85 1
a85 1
      $http.get(user.storagePath).success(function(data) {
d99 1
a99 1
        thisday = t.getDate() + " " + mStr[t.getMonth()];
d110 9
d125 1
a125 1
    $scope.dateStr = $scope.weekDays[t.getDay()] + " " + t.getDate() + " " + mStr[t.getMonth()] + " " + t.getFullYear();
d129 1
a129 12

    //var tnow=new Date();
    //var h=tnow.getHours();
    //var m=tnow.getMinutes();
    //var s=tnow.getSeconds();
    //m = checkTime(m);
    //s = checkTime(s);
    //$("#time").html(h+":"+m);
//function checkTime(i) {
//    if (i<10) {i = "0" + i};  // add zero in front of numbers < 10
//    return i;
//}
d174 1
a174 1
        url: user.storagePath,
a185 10
//var d = $.ajax({
    //type: "GET",
    //url: user.storagePath,
    //dataType: 'json',
    //async: false,
//});
//if (d.status == "200") {
    //console.log("get: " + d.responseText);
//}

d192 10
a201 12
<tr>
<td width="25%" align="left"> {{ dateStr }} </td>
<td width="50%"> &nbsp; </td>
<td width="25%" align="right"> {{ weekDayStr }}  </td>
</tr>
<tr>
<td width="25%" align="left"> 
  <span style="display: block !important; width: 180px; text-align: center; font-family: sans-serif; font-size: 12px;"><a href="http://www.wunderground.com/cgi-bin/findweather/getForecast?query=zmw:07006.1.99999&bannertypeclick=wu_blueglass" title="Caldwell, New Jersey Weather Forecast" target="_blank"><img src="http://weathersticker.wunderground.com/weathersticker/cgi-bin/banner/ban/wxBanner?bannertype=wu_blueglass&airportcode=KCDW&ForcedCity=Caldwell&ForcedState=NJ&zip=07006&language=EN" alt="Find more about Weather in Caldwell, NJ" width="160" /></a><br><a href="http://www.wunderground.com/cgi-bin/findweather/getForecast?query=zmw:07006.1.99999&bannertypeclick=wu_blueglass" title="Get latest Weather Forecast updates" style="font-family: sans-serif; font-size: 12px" target="_blank">Click for weather forecast</a></span>
</td>
<td class="ggTimeStr" width="50%" align="center"> {{ timeStr }} </td>
<td width="25%"> {{ specialDayStr }} </td>
</tr>
a207 1

d209 4
a212 4
<tr ng-repeat="tt in ggTaskTimes track by $index">
  <td  width="45%" align="right" class="ggTT" > {{ tt.t }} </td>
  <td  width="45%" align="left" class="ggTT" > &nbsp; &nbsp; {{ tt.s }} </td>
</tr>
d220 1
d222 4
a225 4
<form ng-submit="dologinstate()">
  <td> <input type="text" ng-model="username" placeholder='enter name'> </td>
  <td> <input type="submit" value="{{loginstate}}"> </td>
</form>
d232 14
a245 14
<table>
<tr ng-repeat="tt in ggTaskTimes track by $index">
  <td> &nbsp; &nbsp; </td>
  <td> <a href="" ng-click="removeTime(tt.t)"> &#9747; </td> 
  <td> {{ tt.t }} &nbsp; {{ tt.s }} </td>
</tr>
<tr>
  <td> &nbsp; </td>
  <td> &nbsp; &nbsp; </td>
  <td> <input type="text" ng-model="addTime" placeholder="time"> </td>
  <td> <input type="text" ng-model="addTask" placeholder="a task"> </td>
  <td> <input type="submit" value="add"> </td>
</tr>
</table>
d247 1
d249 1
d252 8
a259 8
<table>
<tr ng-repeat="d in ggWeekDays track by $index">
  <td> {{ d.w }} </td> <td> <input type="text" ng-model="d.s" placeholder="empty"> </td>
</tr>
<tr>
  <td> <input type="submit" value="update"> </td>
</tr>
</table>
d261 1
d263 2
a264 1
<br>
d266 13
a278 14
Special dates:
<table>
<tr ng-repeat="(d,w) in ggSpecialDays track by $index">
  <td> <a href="" ng-click="removeSpecialDay(d)"> &#9747; </td> 
  <td> {{ d }} </td> 
  <td> {{ w }} </td> 
</tr>
<tr>
  <td> &nbsp; </td>
  <td> <input type="text" ng-model="sdaddDay" placeholder="day month"> </td>
  <td> <input type="text" ng-model="sdaddWhat" placeholder="what"> </td>
  <td> <input type="submit" value="add"> </td>
</tr>
</table>
d280 1
d282 1
a288 1

@


1.6
log
@special days, week days update fixed
@
text
@d82 1
a82 1
    $scope.specialDayStr = "xx";
a83 24
    $http.get(user.storagePath).success(function(data) {
      if (data.ggTaskTimes) {
        $scope.ggTaskTimes = data.ggTaskTimes;
      }
      if (data.ggSpecialDays) {
        $scope.ggSpecialDays = data.ggSpecialDays;
      }
      if (data.ggWeekDays) {
console.log("data.ggweekdays set but ...right?");
        $scope.ggWeekDays = data.ggWeekDays;
      }
      if (data.ggWeatherCity) {
        $scope.ggWeatherCity = data.ggWeatherCity;
      }
// wrong: http.get may return before t = new Date
      $scope.weekDayStr = $scope.ggWeekDays[t.getDay()].s;
      thisday = t.getDate() + " " + mStr[t.getMonth()];
      if ($scope.ggSpecialDays[ thisday ]) {
        $scope.specialDayStr = $scope.ggSpecialDays[ thisday ];
      }
    }).error(function(data) {
      $scope.ggTaskTimes = "error";
      console.log("anghttpget error: " + data.ggTaskTimes);
    }) ;
d85 30
a114 1
    $scope.$on('doLogin', function(e,args) { console.log("doLogin event caught"); } );
d120 2
@


1.5
log
@*** empty log message ***
@
text
@d5 1
d81 2
a82 1
    $scope.weatherCity= "";
d98 1
d100 4
a103 1
      $scope.weatherCityStr = $scope.ggWeatherCity;
d142 1
d147 7
a153 4
      $scope.ggSpecialDays.push( { d:$scope.sdaddDay, w:$scope.sdaddWhat } );
      $scope.addTime = "";
      $scope.addTask = "";
      $scope.storeData();
d157 1
a157 2
      $scope.ggSpecialDays = $scope.ggSpecialDays.filter( function(n){ 
        return n.d != d; });
d160 4
d208 1
a208 1
<td width="25%"> &nbsp; </td>
d263 1
a263 1
  <td> <input type="submit" value="add"> </td>
d272 4
a275 4
<tr ng-repeat="d in ggSpecialDays track by $index">
  <td> <a href="" ng-click="removeSpecialDay(d.d)"> &#9747; </td> 
  <td> {{ d.d }} </td> 
  <td> {{ d.w }} </td> 
d288 1
a288 1
  <input type="text" ng-model="weatherCityStr"> 
@


1.4
log
@special days
@
text
@d77 3
a79 1
    $scope.ggWeekDays = [ ];
d90 1
d96 2
a107 2
    $scope.weekDayStr="loading wds...";
    $scope.weatherCityStr = $scope.ggWeatherCity;
d134 4
d244 1
d246 5
a250 2
<tr ng-repeat="d in weekDays">
  <td> {{ d }} </td> <td> <input type="text" ng-model="daily.d"> </td>
d253 1
@


1.3
log
@*** empty log message ***
@
text
@a35 1
  var wStr = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
d72 8
a79 2
    $scope.specialDays = [ { d:"22 September", w:"bday" } ];
    $scope.taskTimes = "loading...";
d81 12
a92 1
      $scope.taskTimes = data.ggTaskTimes;
d94 1
a94 1
      $scope.taskTimes = "error";
d101 4
a104 4
    $scope.dateStr = wStr[t.getDay()] + " " + t.getDate() + " " + mStr[t.getMonth()] + " " + t.getFullYear();
    $scope.timeStr="loading...";
    $scope.otherStr="loading...";
    $scope.weatherCity="North Caldwell, NJ";
d120 1
a120 1
      $scope.taskTimes.push( { t:$scope.addTime, s:$scope.addTask } );
d123 1
a123 11


      // see http://naleid.com/blog/2013/05/22/saving-json-client-side-to-an-s3-bucket
      // interesting, but not used here; http://christophervachon.com/blog/2014/08/02/aws-s3-connecting-and-getting-a-list-of-objects
      $.ajax({
        type: "PUT",
        url: user.storagePath,
        dataType: 'json',
        async: false,
        data: JSON.stringify({ "ggTaskTimes": $scope.taskTimes })
      }); 
d127 1
a127 1
      $scope.taskTimes = $scope.taskTimes.filter( function(n){ 
d129 19
d153 5
a157 1
        data: JSON.stringify({ "ggTaskTimes": $scope.taskTimes })
a161 8
// $.ajax({
    //type: "PUT",
    //url: taskTime_s3Path,
    //dataType: 'json',
    //async: false,
    //data: JSON.stringify({ "ggTaskTimes": [{t:"7:30", s:"GetDressed"}] })
//}); 

d181 1
a181 1
<td width="25%" align="right"> {{ otherStr }}  </td>
d198 1
a198 1
<tr ng-repeat="tt in taskTimes track by $index">
d208 1
d221 1
a221 1
<tr ng-repeat="tt in taskTimes track by $index">
d234 1
d244 1
d247 2
a248 2
<tr ng-repeat="d in specialDays">
  <td> <a href="" ng-click="removeSD(d)"> &#9747; </td> 
d259 1
d263 1
a263 1
  <input type="text" ng-model="weatherCity"> 
@


1.2
log
@special days
@
text
@d1 1
a1 1
<html ng-app="ggApp">
d10 1
a10 1
  background-color: #BBBBBB;
d22 3
d29 1
d32 2
a33 4
  user.taskTimesPath = "http://getgoing1.s3.amazonaws.com/"+user.namePath+"/ggTaskTimes.json";
  console.log(user.taskTimesPath);
  var m = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
  var w = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
d35 2
a37 1
  var ggApp = angular.module('ggApp', ["ngCookies"]);
d39 4
a42 2
  ggApp.controller('GgLoginCtrl', function ($scope, $cookies){
    x = $cookies.getGoingUserName;
d71 1
a71 1
  ggApp.controller('GgMainCtrl', function ($scope, $http){
d75 1
a75 1
    $http.get(user.taskTimesPath).success(function(data) {
d85 1
a85 1
    $scope.dateStr = w[t.getDay()] + " " + t.getDate() + " " + m[t.getMonth()] + " " + t.getFullYear();
d113 1
a113 1
        url: user.taskTimesPath,
d125 1
a125 1
        url: user.taskTimesPath,
d143 1
a143 1
    //url: user.taskTimesPath,
d154 1
a154 1
<body ng-controller="GgMainCtrl">
d178 2
a179 3
  <td  width="45%" align="right"> {{ tt.t }} </td>
  <td  width="10%" align="right"> &nbsp;</td>
  <td  width="45%" align="left"> {{ tt.s }} </td>
d187 1
a187 2
<div ng-controller="GgLoginCtrl">
Login here...
d194 3
a196 2
<hr>
Edit here....
a197 1
Tasks / Times:
d200 3
a202 4
  <td> <a href="" ng-click="removeTime(tt.t)"> delete </td> 
  <td> {{ tt.t }} </td>
  <td> {{ tt.s }} </td>
  <td> edit </td>
d206 1
d224 1
a224 1
  <td> <a href="" ng-click="removeSD(d)"> delete </td> 
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
  <title>Angular.js Example</title>
d68 1
a68 1
    $scope.specialDays = { "22 September":"bday" ];
d221 9
a229 1
  <td> {{ d }} </td> <td> <input type="text" ng-model="special.d"> </td>
@
